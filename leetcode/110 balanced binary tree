
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def check_height(node: Optional[TreeNode]) -> int:
            if not node:
                return 0

            left_height = check_height(node.left)
            if left_height == -1:
                return -1  # Left subtree is not balanced

            right_height = check_height(node.right)
            if right_height == -1:
                return -1  # Right subtree is not balanced

            if abs(left_height - right_height) > 1:
                return -1  # Current node is not balanced

            return max(left_height, right_height) + 1

        return check_height(root) != -1
