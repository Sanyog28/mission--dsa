from collections import deque

def topView(root):
    if not root:
        return

    # Dictionary to store first node at each horizontal distance
    top_view_map = {}
    # Queue for level order traversal, storing node and its horizontal distance
    queue = deque([(root, 0)])

    min_hd = max_hd = 0  # To print in left-to-right order later

    while queue:
        node, hd = queue.popleft()

        # If this HD hasn't been seen before, it's part of the top view
        if hd not in top_view_map:
            top_view_map[hd] = node.info
            min_hd = min(min_hd, hd)
            max_hd = max(max_hd, hd)

        if node.left:
            queue.append((node.left, hd - 1))
        if node.right:
            queue.append((node.right, hd + 1))

    # Print in order from leftmost to rightmost HD
    for hd in range(min_hd, max_hd + 1):
        print(top_view_map[hd], end=" ")
